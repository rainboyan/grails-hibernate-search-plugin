buildscript {
	repositories {
		mavenLocal()
		maven { url "https://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
	}
}

group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"maven-publish"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.internal.grails-plugin-publish"

ext {
	grailsVersion = project.grailsVersion
}

configurations {
	groovydocconf.extendsFrom(runtime)
}
groovydoc {
	def title = "Grails Hibernate Search plugin ${version}"
	groovyClasspath = project.configurations.groovydocconf
}

jar {
	exclude 'hibernate.search/**'
}

repositories {
	mavenLocal()
	maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
	compile "org.springframework.boot:spring-boot-starter-logging"
	compile "org.springframework.boot:spring-boot-autoconfigure"
	compile "org.grails:grails-core"
	compile "org.grails:grails-logging"

	compile "org.grails.plugins:hibernate5"
	compile "org.hibernate:hibernate-core:5.4.10.Final"
	compile "org.hibernate:hibernate-ehcache:5.4.10.Final"
	
	compile "org.hibernate:hibernate-search-orm:5.11.8.Final" 
	
	console "org.grails:grails-console"
	profile "org.grails.profiles:plugin"

	provided "org.grails:grails-plugin-services"
	provided "org.grails:grails-plugin-domain-class"
	provided "org.grails:grails-plugin-datasource"
	provided "org.springframework.boot:spring-boot-starter-actuator"
	provided "org.springframework.boot:spring-boot-starter-tomcat"
	provided "org.grails:grails-web-boot"

	testCompile "org.grails:grails-plugin-testing"
	testCompile "org.grails.plugins:geb"
	testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
	testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
	
	groovydocconf 'org.fusesource.jansi:jansi:1.13'
	groovydocconf 'org.codehaus.groovy:groovy-all:2.4.12'

}

bootRun {
	jvmArgs('-Dspring.output.ansi.enabled=always')
	sourceResources sourceSets.main
}

grailsPublish {
	// user/key: useless, see https://medium.com/@benorama/how-to-publish-your-grails-3-plugin-to-bintray-c341b24f567d#.elz43j5nq
	user = 'lgrignon'
	githubSlug = 'mathpere/grails-hibernate-search-plugin'
	license { name = 'Apache-2.0' }
	title = "Grails Hibernate Search Plugin"
	desc = "This plugin aims to integrate Hibernate Search features to Grails in very few steps."
	developers = [mathpere: "Mathieu Perez", lgrignon: "Louis Grignon"]
}

publishing {
	publications {
		mavenJar(MavenPublication) {
			groupId 'org.grails.plugins'
			artifactId 'hibernate-search'

			pom.withXml {
				def pomNode = asNode()
				
				pomNode.appendNode('description',
					'Grails 3.2.x plugin for Hibernate Search')
				
				pomNode.dependencyManagement.replaceNode {}

				// simply remove dependencies without a version
				// version-less dependencies are handled with dependencyManagement
				// see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
				pomNode.dependencies.dependency.findAll {
					it.version.text().isEmpty()
				}.each {
					it.replaceNode {}
				}
			}

			from components.java
		}
	}
}

if (project.hasProperty('hibernateSearchMavenUser') && project.hasProperty('hibernateSearchMavenPassword') && project.hasProperty('hibernateSearchMavenRepoUrl')) {
	println "Configure publish tasks"
	publishing {
		repositories {
			maven {
				credentials {
					username "$hibernateSearchMavenUser"
					password "$hibernateSearchMavenPassword"
				}
				url "$hibernateSearchMavenRepoUrl/libs-release-local"
			}
		}
		
	}
}

task dumpDependencies {
    doLast {
        configurations.compile.each { println it }
    }
}

